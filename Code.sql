/*1.Script tạo cấu trúc các bảng trong bài*/
CREATE TABLE CHUDE
(
	MACD nchar(4),
	TENCD nvarchar(21),
	PRIMARY KEY (MACD)
)
CREATE TABLE DETAI
(
	MADT char(3),
	TENDT nvarchar(40),
	CAPQL nvarchar(8),
	KINHPHI float,
	NGAYBD date,
	NGAYKT date,
	MACD nchar(4),
	GVCNDT char(3),
	PRIMARY KEY (MADT),
	FOREIGN KEY (MACD) REFERENCES CHUDE(MACD)
)
CREATE TABLE CONGVIEC
(
	MADT char(3),
	SOTT int,
	TENCV nvarchar(24),
	NGAYBD date,
	NGAYKT date,
	PRIMARY KEY (MADT,SOTT),
	FOREIGN KEY (MADT) REFERENCES DETAI(MADT)
)
CREATE TABLE THAMGIADT
(
	MAGV char(3),
	MADT char(3),
	STT int,
	PHUCAP float,
	KETQUA nvarchar(4),
	PRIMARY KEY (MAGV,MADT,STT),
	FOREIGN KEY (MADT,STT) REFERENCES CONGVIEC(MADT,SOTT)
)
CREATE TABLE KHOA
(
	MAKHOA varchar(4),
	TENKHOA nvarchar(19),
	NAMTL int,
	PHONG char(3),
	DIENTHOAI char(10),
	TRUONGKHOA char(3),
	NGAYNHANCHUC date,
	PRIMARY KEY (MAKHOA)
)
CREATE TABLE BOMON
(
	MABM nvarchar(4),
	TENBM nvarchar(18),	
	PHONG char(3),
	DIENTHOAI varchar(10),
	TRUONGBM char(3),
	MAKHOA varchar(4),
	NGAYNHANCHUC date,
	PRIMARY KEY (MABM),
	FOREIGN KEY (MAKHOA) REFERENCES KHOA(MAKHOA)
)
CREATE TABLE NGUOITHAN
(
	MAGV char(3),
	TEN nvarchar(6),	
	NGAYSINH date,
	PHAI nvarchar(3),
	PRIMARY KEY (MAGV,TEN)
)
CREATE TABLE GV_DT
(
	MAGV char(3),
	DIENTHOAI varchar(10),
	PRIMARY KEY (MAGV,DIENTHOAI)
)
CREATE TABLE GIAOVIEN
(
	MAGV char(3),
	HOTEN nvarchar(20),	
	LUONG float,
	PHAI nvarchar(3),
	NGSINH date,
	DIACHI nvarchar(40),
	GVQLCM char(3),
	MABM nvarchar(4),
	PRIMARY KEY (MAGV),
	FOREIGN KEY (GVQLCM) REFERENCES GIAOVIEN(MAGV),
	FOREIGN KEY (MABM) REFERENCES BOMON(MABM)
)

ALTER TABLE DETAI
ADD CONSTRAINT FK_DETAI_GIAOVIEN
FOREIGN KEY (GVCNDT) REFERENCES GIAOVIEN(MAGV)

ALTER TABLE THAMGIADT
ADD CONSTRAINT FK_THAMGIADT_GIAOVIEN
FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)

ALTER TABLE KHOA
ADD CONSTRAINT FK_KHOA_GIAOVIEN
FOREIGN KEY (TRUONGKHOA) REFERENCES GIAOVIEN(MAGV)

ALTER TABLE BOMON
ADD CONSTRAINT FK_BOMON_GIAOVIEN
FOREIGN KEY (TRUONGBM) REFERENCES GIAOVIEN(MAGV)

ALTER TABLE NGUOITHAN
ADD CONSTRAINT FK_NGUOITHAN_GIAOVIEN
FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)

ALTER TABLE GV_DT
ADD CONSTRAINT FK_GV_DT_GIAOVIEN
FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)

/*1.Script nhập dữ liệu vào các bảng*/
INSERT INTO KHOA VALUES ('CNTT',N'Công nghệ thông tin',1995,'B11',0838123456,NULL,'2005-02-20')
INSERT INTO KHOA VALUES ('HH',N'Hóa học',1980,'B41',0838456456,NULL,'2001-10-15')
INSERT INTO KHOA VALUES ('SH',N'Sinh học',1980,'B31',0838454545,NULL,'2000-10-11')
INSERT INTO KHOA VALUES ('VL',N'Vật lý',1976,'B21',0838223223,NULL,'2003-09-18')

INSERT INTO BOMON VALUES ('CNTT',N'Công nghệ tri thức','B15',0838126126,NULL,'CNTT',NULL)
INSERT INTO BOMON VALUES ('HHC',N'Hóa hữu cơ','B44',838222222,NULL,'HH',NULL)
INSERT INTO BOMON VALUES ('HL',N'Hóa lý','B42',0838878787,NULL,'HH',NULL)
INSERT INTO BOMON VALUES ('HPT',N'Hóa phân tích','B43',0838777777,NULL,'HH','2007-10-15')
INSERT INTO BOMON VALUES ('HTTT',N'Hệ thống thông tin','B13',0838125125,NULL,'CNTT','2004-09-20')
INSERT INTO BOMON VALUES ('MMT',N'Mạng máy tính','B16',0838676767,NULL,'CNTT','2005-05-15')
INSERT INTO BOMON VALUES ('SH',N'Sinh hóa','B33',0838898989,NULL,'SH',NULL)
INSERT INTO BOMON VALUES (N'VLĐT',N'Vật lý điện tử','B23',0838234234,NULL,'VL',NULL)
INSERT INTO BOMON VALUES (N'VLƯD',N'Vật lý ứng dụng','B24',0838454545,NULL,'VL','2006-02-18')
INSERT INTO BOMON VALUES ('VS',N'Vi sinh','B32',0838909090,NULL,'SH','2007-01-01')

INSERT INTO GIAOVIEN VALUES('001',N'Nguyễn Hoài An',2000.0,'Nam','1973-02-15',N'25/3 Lạc Long Quân, Q.10, TP HCM',NULL,'MMT')
INSERT INTO GIAOVIEN VALUES('002',N'Trần Trà Hương',2500.0,N'Nữ','1960-06-20',N'125 Trần Hưng Đạo, Q.1,TP HCM',NULL,'HTTT')
INSERT INTO GIAOVIEN VALUES('003',N'Nguyễn Ngọc Ánh',2200.0,N'Nữ','1975-05-11',N'12/21 Võ Văn Ngân Thủ Đức, TP HCM','002','HTTT')
INSERT INTO GIAOVIEN VALUES('004',N'Trương Nam Sơn',2300.0,'Nam','1959-06-20',N'215 Lý Thường Kiệt,TP Biên Hoà',NULL,'VS')
INSERT INTO GIAOVIEN VALUES('005',N'Lý Hoàng Hà',2500.0,'Nam','1954-10-23',N'22/5 Nguyễn Xí, Q.Bình Thạnh, TP HCM',NULL,N'VLĐT')
INSERT INTO GIAOVIEN VALUES('006',N'Trần Bạch Tuyết',1500.0,N'Nữ','1980-05-20',N'127 Hùng Vương, TP Mỹ Tho','004','VS')
INSERT INTO GIAOVIEN VALUES('007',N'Nguyễn An Trung',2100.0,'Nam','1976-06-05',N'234 3/2, TP Biên Hoà',NULL,'HPT')
INSERT INTO GIAOVIEN VALUES('008',N'Trần Trung Hiếu',1800.0,'Nam','1977-08-06',N'22/11 Lý Thường Kiệt, TP Mỹ Tho','007','HPT')
INSERT INTO GIAOVIEN VALUES('009',N'Trần Hoàng Nam',2000.0,'Nam','1975-11-22',N'234 Trấn Não, An Phú,TP HCM','001','MMT')
INSERT INTO GIAOVIEN VALUES('010',N'Phạm Nam Thanh',1500.0,'Nam','1980-12-12',N'221 Hùng Vương, Q.5, TP HCM','007','HPT')

UPDATE KHOA
SET TRUONGKHOA='002'
WHERE MAKHOA='CNTT'

UPDATE KHOA
SET TRUONGKHOA='007'
WHERE MAKHOA='HH'

UPDATE KHOA
SET TRUONGKHOA='004'
WHERE MAKHOA='SH'

UPDATE KHOA
SET TRUONGKHOA='005'
WHERE MAKHOA='VL'

UPDATE BOMON
SET TRUONGBM='007'
WHERE MABM='HPT'

UPDATE BOMON
SET TRUONGBM='002'
WHERE MABM='HTTT'

UPDATE BOMON
SET TRUONGBM='001'
WHERE MABM='MMT'

UPDATE BOMON
SET TRUONGBM='005'
WHERE MABM=N'VLƯD'

UPDATE BOMON
SET TRUONGBM='004'
WHERE MABM='VS'

INSERT INTO CHUDE VALUES ('NCPT',N'Nghiên cứu phát triển')
INSERT INTO CHUDE VALUES ('QLGD',N'Quản lý giáo dục')
INSERT INTO CHUDE VALUES (N'ƯDCN',N'Ứng dụng công nghệ')

INSERT INTO DETAI VALUES ('001',N'HTTT quản lý các trường ĐH',N'ĐHQG',20.0,'2007-10-20','2008-10-20','QLGD','002')
INSERT INTO DETAI VALUES ('002',N'HTTT quản lý giáo vụ cho một Khoa',N'Trường',20.0,'2000-10-12','2001-10-12','QLGD','002')
INSERT INTO DETAI VALUES ('003',N'Nghiên cứu chế tạo sợi Nanô Platin',N'ĐHQG',300.0,'2008-5-15','2010-5-15','NCPT','005')
INSERT INTO DETAI VALUES ('004',N'Tạo vật liệu sinh học bằng màng ối người',N'Nhà nước',100.0,'2007-01-01','2009-12-31','NCPT','004')
INSERT INTO DETAI VALUES ('005',N'Ứng dụng hóa học xanh',N'Trường',200.0,'2003-10-10','2004-12-10',N'ƯDCN','007')
INSERT INTO DETAI VALUES ('006',N'Nghiên cứu tế bào gốc',N'Nhà nước',4000.0,'2006-10-20','2009-10-20','NCPT','004')
INSERT INTO DETAI VALUES ('007',N'HTTT quản lý thư viện ở các trường ĐH',N'Trường',20.0,'2009-05-10','2010-05-10','QLGD','001')

INSERT INTO CONGVIEC VALUES ('001',1,N'Khởi tạo và Lập kế hoạch','2007-10-20','2008-12-20')
INSERT INTO CONGVIEC VALUES ('001',2,N'Xác định yêu cầu','2008-12-21','2008-03-21')
INSERT INTO CONGVIEC VALUES ('001',3,N'Phân tích hệ thống','2008-03-22','2008-05-22')
INSERT INTO CONGVIEC VALUES ('001',4,N'Thiết kế hệ thống','2008-05-23','2008-06-23')
INSERT INTO CONGVIEC VALUES ('001',5,N'Cài đặt thử nghiệm','2008-06-24','2008-10-20')
INSERT INTO CONGVIEC VALUES ('002',1,N'Khởi tạo và Lập kế hoạch','2009-05-10','2009-07-10')
INSERT INTO CONGVIEC VALUES ('002',2,N'Xác định yêu cầu','2009-07-11','2009-10-11')
INSERT INTO CONGVIEC VALUES ('002',3,N'Phân tích hệ thống','2009-10-12','2009-12-20')
INSERT INTO CONGVIEC VALUES ('002',4,N'Thiết kế hệ thống','2009-12-21','2010-03-22')
INSERT INTO CONGVIEC VALUES ('002',5,N'Cài đặt thử nghiệm','2010-03-23','2010-05-10')
INSERT INTO CONGVIEC VALUES ('006',1,N'Lấy mẫu','2006-10-20','2007-02-20')
INSERT INTO CONGVIEC VALUES ('006',2,N'Nuôi cấy','2007-02-21','2008-08-21')


INSERT INTO THAMGIADT VALUES ('001','002',1,0.0,NULL)
INSERT INTO THAMGIADT VALUES ('001','002',2,2.0,NULL)
INSERT INTO THAMGIADT VALUES ('002','001',4,2.0,N'Đạt')
INSERT INTO THAMGIADT VALUES ('003','001',1,1.0,N'Đạt')
INSERT INTO THAMGIADT VALUES ('003','001',2,0.0,N'Đạt')
INSERT INTO THAMGIADT VALUES ('003','001',4,1.0,N'Đạt')
INSERT INTO THAMGIADT VALUES ('003','002',2,0.0,NULL)
INSERT INTO THAMGIADT VALUES ('004','006',1,0.0,N'Đạt')
INSERT INTO THAMGIADT VALUES ('004','006',2,1.0,N'Đạt')
INSERT INTO THAMGIADT VALUES ('006','006',2,1.5,N'Đạt')
INSERT INTO THAMGIADT VALUES ('009','002',3,0.5,NULL)
INSERT INTO THAMGIADT VALUES ('009','002',4,1.5,NULL)

INSERT INTO NGUOITHAN VALUES ('001',N'Hùng','1990-01-14','Nam')
INSERT INTO NGUOITHAN VALUES ('001',N'Thủy','1994-12-08',N'Nữ')
INSERT INTO NGUOITHAN VALUES ('003',N'Hà','1998-09-03',N'Nữ')
INSERT INTO NGUOITHAN VALUES ('003',N'Thu','1998-09-03',N'Nữ')
INSERT INTO NGUOITHAN VALUES ('007','Mai','2003-03-26',N'Nữ')
INSERT INTO NGUOITHAN VALUES ('007','Vy','2000-02-14',N'Nữ')
INSERT INTO NGUOITHAN VALUES ('008','Nam','1991-05-06','Nam')
INSERT INTO NGUOITHAN VALUES ('009','An','1996-08-19','Nam')
INSERT INTO NGUOITHAN VALUES ('010',N'Nguyệt','2006-01-14',N'Nữ')

INSERT INTO GV_DT VALUES ('001',0838912112)
INSERT INTO GV_DT VALUES ('001',0903123123)
INSERT INTO GV_DT VALUES ('002',0913454545)
INSERT INTO GV_DT VALUES ('003',0838121212)
INSERT INTO GV_DT VALUES ('003',0903656565)
INSERT INTO GV_DT VALUES ('003',0937125125)
INSERT INTO GV_DT VALUES ('006',0937888888)
INSERT INTO GV_DT VALUES ('008',0653717171)
INSERT INTO GV_DT VALUES ('008',0913232323)

/*Kiểm tra dữ liệu các bảng đã nhập*/
SELECT * FROM CONGVIEC
SELECT * FROM THAMGIADT
SELECT * FROM CHUDE
SELECT * FROM NGUOITHAN
SELECT * FROM DETAI
SELECT * FROM GIAOVIEN
SELECT * FROM BOMON
SELECT * FROM GV_DT
SELECT * FROM KHOA

/*2.Ta tạo database diagrams và add tất cả các bảng vào, kết quả thu được giống với mô tả của bài tập*/


/*Tuần 3*/
/*Q1. Cho biết họ tên và mức lương của các giáo viên nữ*/
SELECT HOTEN AS TENGV, LUONG 
FROM GIAOVIEN 
WHERE PHAI =N'Nữ'

/*Q2. Cho biết họ tên của các giáo viên và lương của họ sau khi tăng 10%*/
SELECT HOTEN, LUONG*110/100 AS LUONG 
FROM GIAOVIEN 

/*Q3. Cho biết mã của các giáo viên có họ tên bắt đầu là “Nguyễn” và lương trên $2000 hoặc,giáo viên là trưởng bộ môn nhận chức sau năm 1995*/
SELECT MAGV
FROM GIAOVIEN AS GV ,BOMON AS BM 
WHERE GV.HOTEN LIKE N'Nguyễn%' AND GV.LUONG > 2000 OR BM.TRUONGBM=GV.MAGV AND BM.TRUONGBM IS NOT NULL AND BM.NGAYNHANCHUC>'1995'
GROUP BY MAGV

/*Q4. Cho biết tên những giáo viên khoa Công nghệ thông tin*/
SELECT GV.HOTEN AS TENGV , K.TENKHOA 
FROM GIAOVIEN AS GV ,BOMON AS BM ,KHOA AS K 
WHERE (GV.MABM = BM.MABM) AND (BM.MAKHOA=K.MAKHOA) AND K.TENKHOA =N'Công nghệ thông tin'
GROUP BY  GV.HOTEN, K.TENKHOA

/*Q5. Cho biết thông tin của bộ môn cùng thông tin giảng viên làm trưởng bộ môn đó*/
SELECT GV.MAGV ,GV.HOTEN AS TENGV, BM.*
FROM GIAOVIEN AS GV ,BOMON AS BM
WHERE BM.TRUONGBM = GV.MAGV 

/*Q6. Với mỗi giáo viên, hãy cho biết thông tin của bộ môn mà họ đang làm việc*/
SELECT GV.HOTEN AS TEN ,BM.*
FROM GIAOVIEN AS GV ,BOMON AS BM 
WHERE BM.MABM = GV.MABM 

/*Q7. Cho biết tên đề tài và giáo viên chủ nhiệm đề tài*/
SELECT DT.TENDT ,GV.HOTEN AS TENGV
FROM GIAOVIEN AS GV ,DETAI AS DT
WHERE DT.GVCNDT = GV.MAGV 

/*Q8. Với mỗi khoa cho biết thông tin trưởng khoa*/
SELECT GV.*
FROM GIAOVIEN AS GV ,KHOA AS K
WHERE K.TRUONGKHOA = GV.MAGV 

/*Q9. Cho biết các giáo viên của bộ môn “Vi sinh” có tham gia đề tài 006*/
SELECT GV.HOTEN AS TENGV 
FROM GIAOVIEN AS GV ,BOMON AS BM ,THAMGIADT AS TGDT
WHERE BM.MABM = GV.MABM AND BM.TENBM = N'Vi sinh' AND GV.MAGV = TGDT.MAGV AND TGDT.MADT= '006' 
GROUP BY GV.HOTEN

/*Q10. Với những đề tài thuộc cấp quản lý “Trường”, cho biết mã đề tài, đề tài thuộc về chủ đề nào, 
họ tên người chủ nghiệm đề tài cùng với ngày sinh và địa chỉ của người ấy*/
SELECT DT.MADT AS MA, DT.TENDT ,GV.HOTEN AS TENGVCN ,GV.NGSINH ,GV.DIACHI 
FROM GIAOVIEN AS GV ,DETAI AS DT
WHERE DT.GVCNDT = GV.MAGV AND DT.CAPQL = N'Trường' 

/*Q11. Tìm họ tên của từng giáo viên và người phụ trách chuyên môn trực tiếp của giáo viên đó*/
SELECT GV.HOTEN AS TENGV, GVQL.HOTEN
FROM GIAOVIEN AS GV,GIAOVIEN AS GVQL
WHERE  GV.GVQLCM = GVQL.MAGV

/*Q12. Tìm họ tên của những giáo viên được “Nguyễn Thanh Tùng” phụ trách trực tiếp*/
SELECT GV.HOTEN AS TENGV, GVQL.HOTEN AS TENGVPHUTRACH  
FROM GIAOVIEN AS GV,GIAOVIEN AS GVQL
WHERE  GV.GVQLCM = GVQL.MAGV AND GVQL.HOTEN = N'Nguyễn An Trung'

/*Q13. Cho biết tên giáo viên là trưởng bộ môn “Hệ thống thông tin”*/
SELECT GV.HOTEN AS TENGV  
FROM GIAOVIEN AS GV,BOMON AS BM
WHERE  GV.MAGV = BM.TRUONGBM AND BM.TENBM = N'Hệ thống thông tin'

/*Q14. Cho biết tên người chủ nhiệm đề tài của những đề tài thuộc chủ đề Quản lý giáo dục*/
SELECT GV.HOTEN AS TENGV  
FROM GIAOVIEN AS GV,CHUDE AS CD , DETAI AS DT
WHERE  GV.MAGV = DT.GVCNDT AND DT.MACD = CD.MACD AND CD.TENCD = N'Quản lí giáo dục'

/*Q15. Cho biết tên các công việc của đề tài HTTT quản lý các trường ĐH có thời gian bắt đầu trong tháng 3/2008*/
SELECT CV.TENCV 
FROM CONGVIEC AS CV , DETAI AS DT 
WHERE  CV.MADT=DT.MADT AND DT.TENDT=N'HTTT quản lý các trường ĐH' AND year(CV.NGAYBD) = 2008 AND MONTH(CV.NGAYBD)= 03

/*Q16. Cho biết tên giáo viên và tên người quản lý chuyên môn của giáo viên đó*/
SELECT GV.HOTEN AS TENGV, GVQL.HOTEN  
FROM GIAOVIEN AS GV,GIAOVIEN AS GVQL
WHERE  GV.GVQLCM = GVQL.MAGV

/*Q17. Cho các công việc bắt đầu trong khoảng từ 01/01/2007 đến 01/08/2007*/
SELECT CV.TENCV 
FROM CONGVIEC AS CV 
WHERE datediff(d,CV.NGAYBD,'2007-01-01')<0 AND datediff(d,CV.NGAYBD,'2007-08-01')>-210 

/*Q18. Cho biết họ tên các giáo viên cùng bộ môn với giáo viên “Trần Trà Hương”*/
SELECT LISTGV.HOTEN 
FROM GIAOVIEN AS GV , GIAOVIEN AS LISTGV 
WHERE GV.HOTEN = N'Trần Trà Hương' AND GV.MABM =LISTGV.MABM AND LISTGV.HOTEN != N'Trần Trà Hương' 

/*Q19. Tìm những giáo viên vừa là trưởng bộ môn vừa chủ nhiệm đề tài*/
SELECT GV.HOTEN, GV.MAGV 
FROM GIAOVIEN AS GV , DETAI AS DT , BOMON AS BM 
WHERE DT.GVCNDT = GV.MAGV AND GV.MAGV = BM.TRUONGBM 
GROUP BY  GV.HOTEN,GV.MAGV

/*Q20. Cho biết tên những giáo viên vừa là trưởng khoa và vừa là trưởng bộ môn*/
SELECT GV.HOTEN, GV.MAGV 
FROM GIAOVIEN AS GV , KHOA AS K , BOMON AS BM 
WHERE K.TRUONGKHOA = GV.MAGV AND GV.MAGV = BM.TRUONGBM 
GROUP BY  GV.HOTEN,GV.MAGV

/*Q21. Cho biết tên những trưởng bộ môn mà vừa chủ nhiệm đề tài*/
SELECT GV.HOTEN, GV.MAGV 
FROM GIAOVIEN AS GV , DETAI AS DT , BOMON AS BM 
WHERE DT.GVCNDT = GV.MAGV AND GV.MAGV = BM.TRUONGBM 
GROUP BY  GV.HOTEN,GV.MAGV

/*Q22. Cho biết mã số các trưởng khoa có chủ nhiệm đề tài*/
SELECT K.TRUONGKHOA 
FROM KHOA AS K , DETAI AS DT 
WHERE K.TRUONGKHOA = DT.GVCNDT 
GROUP BY  K.TRUONGKHOA

/*Q23. Cho biết mã số các giáo viên thuộc bộ môn “HTTT” hoặc có tham gia đề tài mã “001”*/
SELECT GV.MAGV 
FROM GIAOVIEN AS GV , DETAI AS DT , BOMON AS BM 
WHERE (GV.MABM = BM.MABM AND BM.MABM = 'HTTT') OR (DT.MADT = '001' AND DT.GVCNDT = GV.MAGV) 
GROUP BY  GV.MAGV

/*Q24. Cho biết giáo viên làm việc cùng bộ môn với giáo viên 002*/
SELECT GV.HOTEN AS TEN, GV.MAGV
FROM GIAOVIEN AS GV , GIAOVIEN AS GV002 
WHERE GV002.MAGV = '002' AND GV.MABM =  GV002.MABM  
GROUP BY GV.HOTEN,GV.MAGV

/*Q25. Tìm những giáo viên là trưởng bộ môn*/
SELECT GV.HOTEN AS TEN, GV.MAGV,BM.TENBM
FROM GIAOVIEN AS GV , BOMON AS BM
WHERE GV.MAGV = BM.TRUONGBM 
GROUP BY GV.HOTEN,GV.MAGV,BM.TENBM

/*Q26. Cho biết họ tên và mức lương của các giáo viên*/
SELECT GV.HOTEN AS TEN, GV.LUONG
FROM GIAOVIEN AS GV 
GROUP BY GV.HOTEN,GV.LUONG


/*Tuần 4*/
/*Q27. Số lượng giáo viên và tổng lương*/
SELECT COUNT(*) AS SLGV, SUM(LUONG) AS TONGLUONG
FROM GIAOVIEN

/*Q28.Số lượng giáo viên và lương trung bình của từng bộ môn*/
SELECT MABM, COUNT(MAGV) AS SLGV, AVG(LUONG) AS LUONGTB
FROM GIAOVIEN
GROUP BY MABM

/*Q29.Tên chủ đề và số lượng đề tài thuộc về chủ đề đó*/
SELECT TENCD, COUNT(MADT) AS SLDT
FROM CHUDE, DETAI
WHERE DETAI.MACD = CHUDE.MACD
GROUP BY CHUDE.TENCD

/*Q30.Tên giáo viên và số lượng đề tài giáo viên đó tham gia*/
SELECT HOTEN, COUNT(DISTINCT MADT) AS SLDT
FROM THAMGIADT, GIAOVIEN
WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN

/*Q31.Tên giáo viên và số lượng đề tài giáo viên đó làm chủ nhiệm*/
SELECT HOTEN, COUNT(*) AS SLDTLCN
FROM DETAI, GIAOVIEN
WHERE DETAI.GVCNDT = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN

/*Q32.Với mỗi giáo viên, tên giáo viên và số người thân*/
SELECT HOTEN, COUNT(*) AS SONGUOITHAN 
FROM NGUOITHAN, GIAOVIEN
WHERE NGUOITHAN.MAGV = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN

/*Q33.Tên những giáo viên đã tham gia từ 3 đề tài trở lên*/
SELECT HOTEN AS GVTGTUBADETAI
FROM GIAOVIEN, THAMGIADT
WHERE GIAOVIEN.MAGV = THAMGIADT.MAGV
GROUP BY GIAOVIEN.MAGV,GIAOVIEN.HOTEN
HAVING COUNT (DISTINCT THAMGIADT.MADT) >=3

/*Q34.Số giáo viên tham gia vào đề tài Ứng dụng hóa học xanh*/
SELECT COUNT(DISTINCT THAMGIADT.MAGV) AS SOGVTHAMGIA
FROM THAMGIADT, DETAI
WHERE DETAI.TENDT = N'Ứng dụng hóa học xanh' AND DETAI.MADT = THAMGIADT.MADT


/*Tuần 4*/
/*Q27. Số lượng giáo viên và tổng lương*/
SELECT COUNT(*) AS SLGV, SUM(LUONG) AS TONGLUONG
FROM GIAOVIEN

/*Q28.Số lượng giáo viên và lương trung bình của từng bộ môn*/
SELECT MABM, COUNT(MAGV) AS SLGV, AVG(LUONG) AS LUONGTB
FROM GIAOVIEN
GROUP BY MABM

/*Q29.Tên chủ đề và số lượng đề tài thuộc về chủ đề đó*/
SELECT TENCD, COUNT(MADT) AS SLDT
FROM CHUDE, DETAI
WHERE DETAI.MACD = CHUDE.MACD
GROUP BY CHUDE.TENCD

/*Q30.Tên giáo viên và số lượng đề tài giáo viên đó tham gia*/
SELECT HOTEN, COUNT(DISTINCT MADT) AS SLDT
FROM THAMGIADT, GIAOVIEN
WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN

/*Q31.Tên giáo viên và số lượng đề tài giáo viên đó làm chủ nhiệm*/
SELECT HOTEN, COUNT(*) AS SLDTLCN
FROM DETAI, GIAOVIEN
WHERE DETAI.GVCNDT = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN

/*Q32.Với mỗi giáo viên, tên giáo viên và số người thân*/
SELECT HOTEN, COUNT(*) AS SONGUOITHAN 
FROM NGUOITHAN, GIAOVIEN
WHERE NGUOITHAN.MAGV = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN

/*Q33.Tên những giáo viên đã tham gia từ 3 đề tài trở lên*/
SELECT HOTEN AS GVTGTUBADETAI
FROM GIAOVIEN, THAMGIADT
WHERE GIAOVIEN.MAGV = THAMGIADT.MAGV
GROUP BY GIAOVIEN.MAGV,GIAOVIEN.HOTEN
HAVING COUNT (DISTINCT THAMGIADT.MADT) >=3

/*Q34.Số giáo viên tham gia vào đề tài Ứng dụng hóa học xanh*/
SELECT COUNT(DISTINCT THAMGIADT.MAGV) AS SOGVTHAMGIA
FROM THAMGIADT, DETAI
WHERE DETAI.TENDT = N'Ứng dụng hóa học xanh' AND DETAI.MADT = THAMGIADT.MADT


/*Tuần 5*/
/*Q35. Mức lương cao nhất của giảng viên*/
SELECT DISTINCT LUONG AS LUONG_CAO_NHAT
FROM GIAOVIEN
WHERE LUONG >= ALL(SELECT LUONG
					FROM GIAOVIEN)

/*Q36.Những giáo viên có lương lớn nhất*/
SELECT MAGV, HOTEN
FROM GIAOVIEN
WHERE LUONG >= ALL(SELECT LUONG
					FROM GIAOVIEN)

/*Q37.Lương cao nhất trong HTTT*/
SELECT DISTINCT LUONG AS LUONG_CAO_NHAT_HTTT
FROM GIAOVIEN
WHERE LUONG >= ALL(SELECT LUONG
					FROM GIAOVIEN
					WHERE MABM='HTTT')

/*Q38.Tên giáo viên lớn tuổi nhất HTTT*/
SELECT HOTEN AS TEN_GV_LON_TUOI_NHAT_HTTT
FROM GIAOVIEN
WHERE MABM = 'HTTT' AND datediff(d, NGSINH, getdate()) >= ALL(SELECT datediff(d, NGSINH, getdate())
																FROM GIAOVIEN
																WHERE MABM = 'HTTT')

/*Q39.Tên giáo viên nhỏ tuổi nhất khoa CNTT*/
SELECT HOTEN AS TEN_GV_NHO_TUOI_NHAT_KHOA_CNTT
FROM GIAOVIEN, BOMON
WHERE BOMON.MAKHOA = 'CNTT' AND GIAOVIEN.MABM = BOMON.MABM AND datediff(d, NGSINH, getdate()) <= ALL(SELECT datediff(d, NGSINH, getdate())
										FROM GIAOVIEN, BOMON
										WHERE BOMON.MAKHOA = 'CNTT' AND GIAOVIEN.MABM = BOMON.MABM)

/*Q40.Tên giáo viên và tên khoa của giáo viên có lương cao nhất*/
SELECT HOTEN, TENKHOA
FROM GIAOVIEN, BOMON, KHOA
WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.MAKHOA = KHOA.MAKHOA AND LUONG >= ALL (SELECT LUONG
																					FROM GIAOVIEN)

/*Q41.Những giáo viên có lương lớn nhất trong bộ môn của họ*/
SELECT GV1.HOTEN, BOMON.TENBM
FROM GIAOVIEN GV1, BOMON
WHERE GV1.MABM = BOMON.MABM AND (SELECT COUNT(*)
									FROM GIAOVIEN GV2
									WHERE GV2.LUONG > GV1.LUONG AND GV1.MABM = GV2.MABM) = 0

/*Q42.Tên những đề tài giáo viên Nguyễn Hoài An chưa tham gia*/
SELECT DETAI.TENDT
FROM DETAI
WHERE DETAI.MADT NOT IN (SELECT THAMGIADT.MADT
							FROM GIAOVIEN, THAMGIADT
							WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV AND GIAOVIEN.HOTEN = N'Nguyễn Hoài An')

/*Q43.Tên đề tài, chủ nhiệm đề tài giáo viên Nguyễn Hoài An chưa tham gia*/
SELECT DETAI.TENDT, GIAOVIEN.HOTEN AS TEN_CHU_NHIEM
FROM DETAI, GIAOVIEN
WHERE GIAOVIEN.MAGV = DETAI.GVCNDT AND DETAI.MADT NOT IN (SELECT THAMGIADT.MADT
							FROM GIAOVIEN, THAMGIADT
							WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV AND GIAOVIEN.HOTEN = N'Nguyễn Hoài An')

/*Q44.Tên những giáo viên khoa CNTT chưa tham gia đề tài nào*/
SELECT GIAOVIEN.HOTEN
FROM GIAOVIEN, BOMON, KHOA
WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.MAKHOA = KHOA.MAKHOA AND KHOA.TENKHOA = N'Công nghệ thông tin' AND GIAOVIEN.MAGV NOT IN (SELECT GIAOVIEN.MAGV
		FROM GIAOVIEN, THAMGIADT
		WHERE GIAOVIEN.MAGV = THAMGIADT.MAGV)

/*Q45.Những giáo viên không tham gia bất kỳ đề tài nào*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN AS TEN_GV_KHONG_TGDT
FROM GIAOVIEN
WHERE GIAOVIEN.MAGV NOT IN (SELECT GIAOVIEN.MAGV
							FROM GIAOVIEN, THAMGIADT
							WHERE GIAOVIEN.MAGV = THAMGIADT.MAGV)

/*Q46.Giáo viên có lương cao hơn Nguyễn Hoài An*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN AS GV_LUONG_CAO_HON_NHAn
FROM GIAOVIEN
WHERE GIAOVIEN.LUONG > (SELECT LUONG
						FROM GIAOVIEN
						WHERE GIAOVIEN.HOTEN = N'Nguyễn Hoài An')

/*Q47.Những trưởng bộ môn tham gia tối thiểu 1 đề tài*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN
FROM GIAOVIEN, BOMON
WHERE GIAOVIEN.MAGV = BOMON.TRUONGBM AND GIAOVIEN.MAGV IN (SELECT GIAOVIEN.MAGV
															FROM GIAOVIEN, THAMGIADT
															WHERE GIAOVIEN.MAGV = THAMGIADT.MAGV)

/*Q48.Giáo viên trùng tên và cùng giới tính trong cùng bộ môn*/
SELECT GV1.MAGV, GV1.HOTEN, GV1.PHAI, GV1.MABM
FROM GIAOVIEN GV1
WHERE (SELECT COUNT(*)
		FROM GIAOVIEN GV2
		WHERE GV1.HOTEN = GV2.HOTEN AND GV1.PHAI = GV2.PHAI AND GV1.MABM = GV2.MABM AND GV1.MAGV != GV2.MAGV) > 0

/*Q49.Những giáo viên có lương lớn hơn lương của ít nhất 1 giáo viên bộ môn Công nghệ phần mềm*/
SELECT GV1.MAGV, GV1.HOTEN
FROM GIAOVIEN GV1
WHERE (SELECT COUNT(*)
		FROM GIAOVIEN GV2, BOMON				
		WHERE GV2.MABM = BOMON.MABM AND BOMON.TENBM = N'Công nghệ phần mềm' AND GV1.LUONG > GV2.LUONG) >= 1

/*Q50.Những giáo viên có lương lớn hơn lương của tất cả giáo viên thuộc bộ môn Hệ thống thông tin*/
SELECT GV1.MAGV, GV1.HOTEN
FROM GIAOVIEN GV1
WHERE GV1.LUONG > (SELECT MAX(LUONG)
					FROM GIAOVIEN, BOMON
					WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.TENBM = N'Hệ thống thông tin')

/*Q51.Tên khoa có đông giáo viên nhất*/
SELECT KHOA.TENKHOA AS KHOA_NHIEU_GV_NHAT
FROM GIAOVIEN, BOMON, KHOA
WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.MAKHOA = KHOA.MAKHOA
GROUP BY KHOA.TENKHOA
HAVING COUNT(*) >= ALL(SELECT COUNT(*)
					FROM GIAOVIEN, BOMON, KHOA
					WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.MAKHOA = KHOA.MAKHOA
					GROUP BY KHOA.TENKHOA)

/*Q52.Họ tên giáo viên chủ nhiệm nhiều đề tài nhất*/
SELECT GIAOVIEN.HOTEN AS GV_CNDT_NHIEU_NHAT
FROM GIAOVIEN, DETAI
WHERE GIAOVIEN.MAGV = DETAI.GVCNDT
GROUP BY GIAOVIEN.HOTEN
HAVING COUNT(*) >= ALL(SELECT COUNT(*)
						FROM GIAOVIEN, DETAI
						WHERE GIAOVIEN.MAGV = DETAI.GVCNDT
						GROUP BY GIAOVIEN.HOTEN)

/*Q53.Mã bộ môn có nhiều giáo viên nhất*/
SELECT GIAOVIEN.MABM AS MABM_NHIEU_GV_NHAT
FROM GIAOVIEN
GROUP BY GIAOVIEN.MABM
HAVING COUNT(*) >= ALL(SELECT COUNT(*)
						FROM GIAOVIEN
						GROUP BY GIAOVIEN.MABM)

/*Q54.Tên giáo viên và tên bộ môn của giáo viên tham gia nhiều đề tài nhất*/
SELECT GIAOVIEN.HOTEN, BOMON.TENBM
FROM GIAOVIEN, BOMON, THAMGIADT
WHERE GIAOVIEN.MABM = BOMON.MABM AND THAMGIADT.MAGV = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.HOTEN, BOMON.TENBM
HAVING COUNT(DISTINCT MADT) >= ALL(SELECT COUNT(DISTINCT MADT)
						FROM GIAOVIEN, THAMGIADT
						WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV
						GROUP BY GIAOVIEN.HOTEN)
		
/*Q55.Tên giáo viên tham gia nhiều đề tài nhất của bộ môn HTTT*/
SELECT GIAOVIEN.HOTEN AS GV_TGDT_NHIEU_NHAT_HTTT
FROM GIAOVIEN, THAMGIADT
WHERE GIAOVIEN.MABM = 'HTTT' AND THAMGIADT.MAGV = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.HOTEN
HAVING COUNT(DISTINCT MADT) >= ALL(SELECT COUNT(DISTINCT MADT)
									FROM GIAOVIEN, THAMGIADT
									WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV AND GIAOVIEN.MABM = 'HTTT'
									GROUP BY GIAOVIEN.HOTEN)

/*Q56.Tên giáo viên và tên bộ môn của giáo viên có nhiều người thân nhất*/
SELECT GIAOVIEN.HOTEN AS GV_NHIEU_NGUOI_THAN_NHAT, BOMON.TENBM
FROM GIAOVIEN, BOMON, NGUOITHAN
WHERE GIAOVIEN.MABM = BOMON.MABM AND GIAOVIEN.MAGV = NGUOITHAN.MAGV
GROUP BY GIAOVIEN.HOTEN, BOMON.TENBM
HAVING COUNT(NGUOITHAN.TEN) >= ALL(SELECT COUNT (NGUOITHAN.TEN)
									FROM GIAOVIEN, NGUOITHAN
									WHERE GIAOVIEN.MAGV = NGUOITHAN.MAGV
									GROUP BY GIAOVIEN.HOTEN)

/*Q57.Tên trưởng bộ môn chủ nhiệm nhiều đề tài nhất*/
SELECT GIAOVIEN.HOTEN AS TRUONGBM_CNDT_NHIEU_NHAT
FROM GIAOVIEN, BOMON, DETAI
WHERE GIAOVIEN.MAGV = DETAI.GVCNDT AND BOMON.TRUONGBM = GIAOVIEN.MAGV
GROUP BY GIAOVIEN.HOTEN
HAVING COUNT(*) >= ALL(SELECT COUNT(*)
						FROM GIAOVIEN, BOMON, DETAI
						WHERE GIAOVIEN.MAGV = DETAI.GVCNDT AND BOMON.TRUONGBM = GIAOVIEN.MAGV
						GROUP BY GIAOVIEN.HOTEN)


/*Tuần 6*/
/*Q58. Tên giáo viên tham gia đề tài đủ tất cả các chủ đề*/
/*Dùng EXCEPT*/
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE NOT EXISTS(
			(SELECT DISTINCT MACD FROM CHUDE)
			EXCEPT
			(SELECT DISTINCT DT.MACD
			FROM (GIAOVIEN GV2 JOIN THAMGIADT ON GV2.MAGV=THAMGIADT.MAGV) JOIN DETAI DT ON THAMGIADT.MADT = DT.MADT
			WHERE GV2.MAGV = GV1.MAGV)
	)


/*Dùng NOT EXISTS*/
SELECT GV1.HOTEN 
FROM GIAOVIEN GV1
WHERE NOT EXISTS(
	SELECT *
	FROM CHUDE
	WHERE NOT EXISTS(
		SELECT *
		FROM GIAOVIEN GV2 JOIN THAMGIADT ON GV2.MAGV = THAMGIADT.MAGV
			JOIN DETAI ON THAMGIADT.MADT = DETAI.MADT
		WHERE DETAI.MACD = CHUDE.MACD
	)
)



/*Dùng COUNT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT ON GV.MAGV = THAMGIADT.MAGV
	JOIN DETAI ON THAMGIADT.MADT = DETAI.MADT
GROUP BY GV.HOTEN, GV.MAGV
HAVING COUNT(DISTINCT DETAI.MACD) = (
	SELECT COUNT(DISTINCT MACD)
	FROM CHUDE
)

/*Q59. Tên đề tài được tất cả giáo viên của bộ môn HTTT tham gia*/
/*Dùng EXCEPT*/
SELECT DETAI.TENDT
FROM  DETAI
WHERE NOT EXISTS(
	(SELECT DISTINCT GV.MAGV 
	FROM GIAOVIEN GV
	WHERE GV.MABM = 'HTTT')
	EXCEPT
	(SELECT DISTINCT GV2.MAGV
	FROM GIAOVIEN GV2 JOIN THAMGIADT ON GV2.MAGV = THAMGIADT.MAGV
	WHERE THAMGIADT.MADT = DETAI.MADT)
)

/*Dùng NOT EXISTS*/
SELECT DETAI.TENDT
FROM  DETAI
WHERE NOT EXISTS(
	SELECT *
	FROM GIAOVIEN GV
	WHERE GV.MABM = 'HTTT' AND NOT EXISTS(
		SELECT *
		FROM THAMGIADT
		WHERE THAMGIADT.MAGV = GV.MAGV AND THAMGIADT.MADT = DETAI.MADT
	)
)

/*Dùng COUNT*/
SELECT DETAI.TENDT
FROM DETAI JOIN THAMGIADT ON DETAI.MADT = THAMGIADT.MADT
	JOIN GIAOVIEN GV ON GV.MAGV = THAMGIADT.MAGV
WHERE GV.MABM = 'HTTT'
GROUP BY DETAI.TENDT, DETAI.MADT
HAVING COUNT(DISTINCT GV.MAGV) = (
	SELECT COUNT(DISTINCT MAGV)
	FROM GIAOVIEN
	WHERE MABM = 'HTTT'
)

/*Q60. Tên đề tài có tất cả giảng viên của bộ môn "Hệ thống thông tin" tham gia*/
/*Dùng EXCEPT*/
SELECT DETAI.TENDT
FROM  DETAI
WHERE NOT EXISTS(
	(SELECT DISTINCT GV.MAGV 
	FROM GIAOVIEN GV, BOMON
	WHERE GV.MABM = BOMON.MABM AND BOMON.TENBM = N'Hệ thống thông tin')
	EXCEPT
	(SELECT DISTINCT GV2.MAGV
	FROM GIAOVIEN GV2 JOIN THAMGIADT ON GV2.MAGV = THAMGIADT.MAGV
	WHERE THAMGIADT.MADT = DETAI.MADT)
	)

/*Dùng NOT EXISTS*/
SELECT DETAI.TENDT
FROM  DETAI
WHERE NOT EXISTS(
	SELECT *
	FROM GIAOVIEN GV, BOMON
	WHERE GV.MABM = BOMON.MABM AND BOMON.TENBM = N'Hệ thống thông tin' AND NOT EXISTS(
		SELECT *
		FROM THAMGIADT
		WHERE THAMGIADT.MAGV = GV.MAGV AND THAMGIADT.MADT = DETAI.MADT
	)
)

/*Dùng COUNT*/
SELECT DETAI.TENDT
FROM DETAI JOIN THAMGIADT ON DETAI.MADT = THAMGIADT.MADT
	JOIN GIAOVIEN GV ON GV.MAGV = THAMGIADT.MAGV
	JOIN BOMON ON BOMON.MABM = GV.MABM
WHERE BOMON.TENBM = N'Hệ thống thông tin'
GROUP BY DETAI.TENDT, DETAI.MADT
HAVING COUNT(DISTINCT GV.MAGV) = (
	SELECT COUNT(DISTINCT MAGV)
	FROM GIAOVIEN, BOMON
	WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.TENBM = N'Hệ thống thông tin'
)

/*Q61. Giáo viên đã tham gia tất cả các đề tài có mã chủ đề là QLGD*/
/*Dùng EXCEPT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS (
	(SELECT DISTINCT MADT
	FROM DETAI
	WHERE MACD = 'QLGD')
	EXCEPT
	(SELECT DISTINCT DETAI.MADT
	FROM THAMGIADT JOIN DETAI ON THAMGIADT.MADT = DETAI.MADT
	WHERE THAMGIADT.MAGV = GV.MAGV AND DETAI.MACD = 'QLGD')
)

/*Dùng NOT EXISTS*/
SELECT GIAOVIEN.HOTEN
FROM GIAOVIEN
WHERE NOT EXISTS (
	SELECT *
	FROM DETAI
	WHERE DETAI.MACD = 'QLGD' AND NOT EXISTS (
		SELECT *
		FROM THAMGIADT
		WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV AND THAMGIADT.MADT = DETAI.MADT
	)
)

/*Dùng COUNT*/
SELECT GIAOVIEN.HOTEN
FROM GIAOVIEN JOIN THAMGIADT ON THAMGIADT.MAGV = GIAOVIEN.MAGV
	JOIN DETAI ON DETAI.MADT = THAMGIADT.MADT
WHERE DETAI.MACD = 'QLGD'
GROUP BY GIAOVIEN.MAGV, GIAOVIEN.HOTEN
HAVING COUNT(DISTINCT DETAI.MADT) = (
	SELECT COUNT(DISTINCT MADT)
	FROM DETAI
	WHERE DETAI.MACD = 'QLGD'
)


/*Q62. Tên giáo viên tham gia tất cả đề tài mà giáo viên Trần Trà Hương đã tham gia*/
/*Dùng EXCEPT*/
SELECT GIAOVIEN.HOTEN
FROM GIAOVIEN
WHERE GIAOVIEN.HOTEN != N'Trần Trà Hương' AND NOT EXISTS (
	(SELECT THAMGIADT.MADT
	FROM THAMGIADT, GIAOVIEN GV
	WHERE GV.HOTEN = N'Trần Trà Hương' AND THAMGIADT.MAGV = GV.MAGV)
	EXCEPT
	(SELECT THAMGIADT.MADT
	FROM THAMGIADT
	WHERE THAMGIADT.MAGV = GIAOVIEN.MAGV)
)
/*Dùng NOT EXISTS*/
SELECT GIAOVIEN.HOTEN
FROM GIAOVIEN
WHERE GIAOVIEN.HOTEN != N'Trần Trà Hương' AND NOT EXISTS (
	SELECT TG1.MADT
	FROM THAMGIADT TG1, GIAOVIEN GV
	WHERE TG1.MAGV = GV.MAGV AND GV.HOTEN = N'Trần Trà Hương' AND NOT EXISTS (
	SELECT TG2.MADT
	FROM THAMGIADT TG2
	WHERE GIAOVIEN.MAGV = TG2.MAGV AND TG2.MADT = TG1.MADT
	)
)


/*Dùng COUNT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV , THAMGIADT TG
WHERE GV.MAGV = TG.MAGV
AND TG.MADT IN ( SELECT THAMGIADT.MADT
					FROM THAMGIADT, GIAOVIEN
					WHERE GIAOVIEN.HOTEN =N'Trần Trà Hương' AND THAMGIADT.MAGV=GIAOVIEN.MAGV)
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TG.MADT) = (SELECT COUNT(DISTINCT THAMGIADT.MADT)
					FROM THAMGIADT, GIAOVIEN
					WHERE GIAOVIEN.HOTEN = N'Trần Trà Hương' AND THAMGIADT.MAGV = GIAOVIEN.MAGV) AND GV.HOTEN NOT LIKE N'Trần Trà Hương'


/*Q63. Tên đề tài được tất cả giáo viên bộ môn Hóa Hữu Cơ tham gia*/
/*Dùng EXCEPT*/
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS ( 
	(SELECT GV.MAGV
	FROM GIAOVIEN GV, BOMON BM
	WHERE GV.MABM=BM.MABM AND BM.TENBM = N'Hoá hữu cơ')
	EXCEPT
	(SELECT TG.MAGV
	FROM THAMGIADT TG
	WHERE TG.MADT = DT.MADT ) 
)

/*Dùng NOT EXISTS*/
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS ( 
		SELECT *
		FROM GIAOVIEN GV, BOMON BM
		WHERE GV.MABM=BM.MABM AND BM.TENBM = N'Hoá hữu cơ' AND NOT EXISTS (
			SELECT *
			FROM THAMGIADT TG
			WHERE TG.MADT= DT.MADT AND TG.MAGV = GV.MAGV) 
)

/*Dùng COUNT*/
SELECT DT.TENDT
FROM DETAI DT,THAMGIADT TG, GIAOVIEN GV, BOMON BM
WHERE TG.MAGV=GV.MAGV AND TG.MADT = DT.MADT	 AND GV.MABM = BM.MABM AND BM.TENBM = N'Hoá hữu cơ'
GROUP BY DT.TENDT
HAVING COUNT(DISTINCT  GV.MAGV) = (SELECT COUNT(*)
					FROM GIAOVIEN GV, BOMON BM
					WHERE GV.MABM=BM.MABM AND BM.TENBM =N'Hoá hữu cơ')


/*Q64. Tên giáo viên tham gia tất cả công việc của đề tài 006*/
/*Dùng EXCEPT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS (
		(SELECT CV.SOTT
		FROM CONGVIEC CV
		WHERE CV.MADT = '006')
		EXCEPT 
		(SELECT TG.STT
		FROM THAMGIADT TG
		WHERE TG.MAGV = GV.MAGV AND TG.MADT = '006')
)

/*Dùng NOT EXISTS*/
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS ( 
		SELECT *
		FROM CONGVIEC CV
		WHERE CV.MADT = '006' AND NOT EXISTS ( 
			SELECT *
			FROM THAMGIADT TG
			WHERE TG.MAGV = GV.MAGV AND CV.MADT=TG.MADT AND CV.SOTT = TG.STT)
)

/*Dùng COUNT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT TG
WHERE GV.MAGV = TG.MAGV AND TG.MADT = '006'
GROUP BY GV.HOTEN, GV.MAGV
HAVING COUNT(DISTINCT TG.STT) = (SELECT COUNT(*)
					FROM CONGVIEC CV
					WHERE CV.MADT = '006')

/*Q65. Giáo viên tham gia tất cả đề tài của chủ đề Ứng dụng công nghệ*/
/*Dùng EXCEPT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS ( 
		(SELECT DT.MADT
		FROM DETAI DT, CHUDE CD
		WHERE DT.MACD = CD.MACD AND CD.TENCD = N'Ứng dụng công nghệ')
		EXCEPT 
		(SELECT TG.MADT
		FROM THAMGIADT TG
		WHERE TG.MAGV = GV.MAGV)
)

/*Dùng NOT EXISTS*/
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS ( 
		SELECT *
		FROM DETAI DT, CHUDE CD
		WHERE DT.MACD = CD.MACD AND CD.TENCD = N'Ứng dụng công nghệ'AND NOT EXISTS ( 
			SELECT *
			FROM THAMGIADT TG
			WHERE TG.MAGV = GV.MAGV AND TG.MADT = DT.MADT)
)

/*Dùng COUNT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT TG, DETAI DT,CHUDE CD
WHERE GV.MAGV = TG.MAGV AND TG.MADT = DT.MADT AND DT.MACD = CD.MACD AND CD.TENCD = N'Ứng dụng công nghệ'
GROUP BY GV.HOTEN, GV.MAGV
HAVING COUNT(DISTINCT DT.MADT) = ( SELECT COUNT(*)
					FROM DETAI DT, CHUDE CD
					WHERE DT.MACD = CD.MACD AND CD.TENCD = N'Ứng dụng công nghệ')

/*Q66. Tên giáo viên tham gia tất cả đề tài do giáo viên Trần Trà Hương làm chủ nhiệm*/
/*Dùng EXCEPT*/
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE NOT EXISTS ( 
		(SELECT DT.MADT
		FROM DETAI DT , GIAOVIEN GV2
		WHERE DT.GVCNDT =GV2.MAGV AND GV2.HOTEN = N'Trần Trà Hương')
		EXCEPT 
		(SELECT TG.MADT
		FROM THAMGIADT TG
		WHERE TG.MAGV = GV1.MAGV)
)

/*Dùng NOT EXISTS*/
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
WHERE NOT EXISTS ( 
		SELECT *
		FROM DETAI DT , GIAOVIEN GV2
		WHERE DT.GVCNDT =GV2.MAGV AND GV2.HOTEN = N'Trần Trà Hương' AND NOT EXISTS (
			SELECT *
			FROM THAMGIADT TG
			WHERE TG.MAGV = GV1.MAGV AND DT.MADT = TG.MADT)
)

/*Dùng COUNT*/
SELECT GV.HOTEN
FROM GIAOVIEN GV, THAMGIADT TG, DETAI DT
WHERE GV.MAGV = TG.MAGV AND TG.MADT = DT.MADT
GROUP BY GV.HOTEN , GV.MAGV
HAVING COUNT (DISTINCT DT.MADT ) = (SELECT COUNT(*)
					FROM DETAI DT , GIAOVIEN GV2
					WHERE DT.GVCNDT = GV2.MAGV AND GV2.HOTEN = N'Trần Trà Hương')

/*Q67. Tên đề tài được tất cả giáo viên khoa CNTT tham gia*/
/*Dùng EXCEPT*/
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS (
		(SELECT GV.MAGV
		FROM GIAOVIEN GV, BOMON BM, KHOA K
		WHERE GV.MABM = BM.MABM AND BM.MAKHOA = K.MAKHOA AND K.MAKHOA = 'CNTT')
		EXCEPT 
		(SELECT GV2.MAGV
		FROM GIAOVIEN GV2, THAMGIADT TG
		WHERE GV2.MAGV = TG.MAGV AND TG.MADT = DT.MADT )
)
/*Dùng NOT EXISTS*/
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS (
		SELECT *
		FROM GIAOVIEN GV, BOMON BM, KHOA K
		WHERE GV.MABM = BM.MABM AND BM.MAKHOA = K.MAKHOA AND K.MAKHOA = 'CNTT' AND NOT EXISTS ( 
			SELECT TG.MAGV
			FROM THAMGIADT TG
			WHERE TG.MADT = DT.MADT AND TG.MAGV = GV.MAGV)
)

/*Dùng COUNT*/
SELECT DT.TENDT
FROM DETAI DT, GIAOVIEN GV, BOMON BM , KHOA K, THAMGIADT TG
WHERE GV.MABM = BM.MABM AND BM.MAKHOA = K.MAKHOA AND GV.MAGV = TG.MAGV AND TG.MADT = DT.MADT AND K.MAKHOA = 'CNTT'
GROUP BY DT.TENDT, DT.MADT
HAVING COUNT ( DISTINCT GV.MAGV) = ( SELECT COUNT(*)
					FROM GIAOVIEN GV, BOMON BM, KHOA K
					WHERE GV.MABM = BM.MABM AND BM.MAKHOA = K.MAKHOA AND K.MAKHOA = 'CNTT')


/*Tuần 7*/
/*Q75. Họ tên giáo viên và tên bộ môn họ làm trưởng bộ môn nếu có*/
SELECT GIAOVIEN.HOTEN, BOMON.TENBM AS LA_TRUONG_BM
FROM GIAOVIEN LEFT JOIN BOMON ON GIAOVIEN.MAGV = BOMON.TRUONGBM

/*Q76. Danh sách tên bộ môn và họ tên trưởng bộ môn đó nếu có*/
SELECT BOMON.TENBM, GIAOVIEN.HOTEN AS HOTEN_TRUONG_BM
FROM GIAOVIEN RIGHT JOIN BOMON ON GIAOVIEN.MAGV = BOMON.TRUONGBM

/*Q77. Danh sách tên giáo viên và các đề tài giáo viên đó chủ nhiệm nếu có*/
SELECT GIAOVIEN.HOTEN, DETAI.TENDT AS DTCN
FROM GIAOVIEN LEFT JOIN DETAI ON GIAOVIEN.MAGV = DETAI.GVCNDT

/*Q78. MAGV, HOTEN giáo viên và mức lương (<$1800:"THẤP"; $1800-$2200:"TRUNG BÌNH"; >$2200:"CAO")*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN, (CASE
										WHEN LUONG < 1800 THEN N'THẤP'
										WHEN LUONG >= 1800 AND LUONG <= 2200 THEN N'TRUNG BÌNH'
										WHEN LUONG > 2200 THEN N'CAO'
										END) AS MUCLUONG
FROM GIAOVIEN

/*Q79. MAGV, HOTEN giáo viên và xếp hạng dựa vào mức lương*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN, RANK() OVER(ORDER BY LUONG desc) XEP_HANG_LUONG
FROM GIAOVIEN
ORDER BY GIAOVIEN.MAGV asc

/*Q80. Thông tin thu nhập của giáo viên*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN, (CASE
										WHEN GIAOVIEN.MAGV = BOMON.TRUONGBM AND GIAOVIEN.MAGV != KHOA.TRUONGKHOA THEN LUONG + 300
										WHEN GIAOVIEN.MAGV = KHOA.TRUONGKHOA AND GIAOVIEN.MAGV != BOMON.TRUONGBM THEN LUONG + 600
										WHEN GIAOVIEN.MAGV = KHOA.TRUONGKHOA AND GIAOVIEN.MAGV = BOMON.TRUONGBM THEN LUONG + 900
										ELSE LUONG
										END) AS THUNHAP
FROM (GIAOVIEN LEFT JOIN BOMON ON GIAOVIEN.MAGV = BOMON.TRUONGBM) LEFT JOIN KHOA ON GIAOVIEN.MAGV = KHOA.TRUONGKHOA

/*Q81. Năm giáo viên dự kiến nghỉ hưu*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN, (CASE PHAI
										WHEN 'Nam' THEN YEAR(NGSINH) + 60
										WHEN N'Nữ' THEN YEAR(NGSINH) + 55
										END) AS NAMNGHIHUU
FROM GIAOVIEN

/*Q82. Danh sách giáo viên và họ tên giáo viên là quản lý chuyên môn của họ*/
SELECT GV1.MAGV, GV1.HOTEN, GV2.HOTEN AS GVQLCM
FROM GIAOVIEN GV1 LEFT JOIN GIAOVIEN GV2 ON GV1.GVQLCM = GV2.MAGV

/*Q83. Danh sách bộ môn, tên trưởng bộ môn, số lượng giáo viên mỗi bộ môn*/
SELECT BOMON.MABM, BOMON.TENBM, BOMON.TRUONGBM, COUNT (*) AS SOLUONGGV
FROM GIAOVIEN RIGHT JOIN BOMON ON BOMON.MABM = GIAOVIEN.MABM
GROUP BY BOMON.MABM, BOMON.TENBM, BOMON.TRUONGBM

/*Q84. Danh sách giáo viên nam và thông tin công việc họ đã tham gia*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN, CONGVIEC.MADT, CONGVIEC.SOTT, CONGVIEC.TENCV
FROM (GIAOVIEN LEFT JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV) LEFT JOIN CONGVIEC ON THAMGIADT.MADT = CONGVIEC.MADT AND THAMGIADT.STT = CONGVIEC.SOTT
WHERE GIAOVIEN.PHAI = 'Nam'

/*Q85. Danh sách tất cả giáo viên và thông tin công việc thuộc đề tài 001 mà họ tham gia*/
SELECT DISTINCT GIAOVIEN.MAGV, GIAOVIEN.HOTEN, CONGVIEC.MADT, CONGVIEC.SOTT, CONGVIEC.TENCV
FROM (GIAOVIEN LEFT JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV) LEFT JOIN CONGVIEC ON THAMGIADT.MADT = CONGVIEC.MADT AND THAMGIADT.STT = CONGVIEC.SOTT AND CONGVIEC.MADT = '001'

/*Q86. Thông tin trưởng bộ môn về hưu năm 2014*/
SELECT GIAOVIEN.MAGV, GIAOVIEN.HOTEN
FROM GIAOVIEN JOIN BOMON ON BOMON.TRUONGBM = GIAOVIEN.MAGV
WHERE (CASE PHAI
		WHEN 'Nam' THEN YEAR(NGSINH)+60
		WHEN N'Nữ' THEN YEAR(NGSINH)+55
		END) = '2014'

/*Q87. Thông tin trưởng khoa và năm họ về hưu*/
SELECT GIAOVIEN.MAGV, (CASE PHAI
						WHEN 'Nam' THEN YEAR(NGSINH) + 60
						WHEN N'Nữ' THEN YEAR(NGSINH) + 55
						END) AS NAMNGHIHUU
FROM GIAOVIEN JOIN KHOA ON GIAOVIEN.MAGV = KHOA.TRUONGKHOA

/*Q88. Tạo bảng DANHSACHTHIDUA*/
CREATE TABLE DANHSACHTHIDUA(
	magv char(3),
	sodtdat int,
	danhhieu nvarchar(24)
)

INSERT INTO DANHSACHTHIDUA
SELECT GIAOVIEN.MAGV, COUNT (THAMGIADT.MADT), NULL
FROM GIAOVIEN LEFT JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV AND THAMGIADT.KETQUA = N'Đạt'
GROUP BY GIAOVIEN.MAGV

UPDATE DANHSACHTHIDUA
SET danhhieu = (CASE
					WHEN sodtdat = 0 THEN N'chưa hoàn thành nhiệm vụ'
					WHEN sodtdat >= 1 AND sodtdat <= 2 THEN N'hoàn thành nhiệm vụ'
					WHEN sodtdat >= 3 AND sodtdat <= 5 THEN N'tiên tiến'
					WHEN sodtdat >= 6 THEN N'lao động xuất sắc'
				END)

/*Xem lại bảng vừa tạo và cập nhật dữ liệu*/
SELECT *
FROM DANHSACHTHIDUA



/*Tuần 8*/
/*P1. Xuất ra toàn bộ danh sách giáo viên*/
CREATE PROCEDURE P1
AS
BEGIN
	SELECT * FROM GIAOVIEN
END
GO
--Kiểm tra
EXEC P1

/*P2. Số lượng đề tài 1 giáo viên đang thực hiện*/
CREATE PROCEDURE P2 @MaGV char(3)
AS
BEGIN
	SELECT COUNT(DISTINCT THAMGIADT.MADT) AS SOLUONGDETAI
	FROM GIAOVIEN JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV
	WHERE GIAOVIEN.MAGV = @MaGV
END
GO
--Kiểm tra
EXEC P2 '003'

/*P3. In thông tin chi tiết của 1 giáo viên (print): Thông tin cá nhân, số lượng đề tài tham gia, số lượng thân nhân*/
CREATE PROCEDURE P3 @MaGV char(3)
AS
BEGIN
	DECLARE @HOTEN nvarchar(20)
	SET @HOTEN = (SELECT GIAOVIEN.HOTEN FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @MaGV)
	DECLARE @PHAI nvarchar(3)
	SET @PHAI = (SELECT GIAOVIEN.PHAI FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @MaGV)
	DECLARE @NGSINH nvarchar(10)
	SET @NGSINH = (SELECT GIAOVIEN.NGSINH FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @MaGV)
	DECLARE @DIACHI nvarchar(40)
	SET @DIACHI = (SELECT GIAOVIEN.DIACHI FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @MaGV)
	DECLARE @SLDT nvarchar(2)
	SET @SLDT = (SELECT COUNT(DISTINCT THAMGIADT.MADT)
	FROM GIAOVIEN JOIN THAMGIADT ON GIAOVIEN.MAGV = THAMGIADT.MAGV
	WHERE GIAOVIEN.MAGV = @MaGV)
	DECLARE @SLTN nvarchar(2)
	SET @SLTN = (SELECT COUNT(*)
	FROM GIAOVIEN JOIN NGUOITHAN ON GIAOVIEN.MAGV = NGUOITHAN.MAGV
	WHERE GIAOVIEN.MAGV = @MaGV)
	Print N'Thông tin chi tiết của giáo viên có mã giáo viên ' + @MaGV + ': '
	Print N'Họ tên: ' + @HOTEN
	Print N'Phái: ' + @PHAI
	Print N'Ngày sinh: ' + @NGSINH
	Print N'Địa chỉ: ' + @DIACHI
	Print N'Số lượng đề tài: ' + @SLDT
	Print N'Số lượng thân nhân: ' + @SLTN
END
GO
--Kiểm tra
EXEC P3 '001'

/*P4. Kiểm tra xem 1 giáo viên có tồn tại không (dựa vào HOTEN, NGSINH, DIACHI)*/
CREATE FUNCTION KT_TONTAI(@HOTEN nvarchar(20), @NGSINH date, @DIACHI nvarchar(40))
RETURNS int
AS
BEGIN
	IF (EXISTS(SELECT GV.MAGV FROM GIAOVIEN GV WHERE GV.HOTEN = @HOTEN AND GV.NGSINH = @NGSINH AND GV.DIACHI = @DIACHI))
		Return 1
	Return 0
END
GO
 
CREATE PROCEDURE P4 @HOTEN nvarchar(20), @NGSINH date, @DIACHI nvarchar(40)
AS
BEGIN
	IF (dbo.KT_TONTAI(@HOTEN, @NGSINH, @DIACHI) = 1)
		Print N'Giáo viên tồn tại!'
	ELSE
		Print N'Giáo viên không tồn tại!'
END
GO
--Kiểm tra
EXEC P4 N'Nguyễn Hoài An', '1973-02-15', N'25/3 Lạc Long Quân, Q.10, TP HCM'

/*P5. Kiểm tra quy định của 1 giáo viên: chỉ được thực hiện đề tài mà bộ môn của giáo viên đó làm chủ nhiệm*/
CREATE FUNCTION KT_QUYDINH(@MAGV char(3))
RETURNS int
AS
BEGIN
	IF (EXISTS(SELECT GV.MAGV
				FROM (((GIAOVIEN GV JOIN THAMGIADT ON GV.MAGV = THAMGIADT.MAGV) JOIN DETAI ON THAMGIADT.MADT = DETAI.MADT) JOIN GIAOVIEN GV2 ON DETAI.GVCNDT = GV2.MAGV) JOIN BOMON ON GV2.MABM = BOMON.MABM AND GV.MABM = GV2.MABM
				WHERE GV.MAGV = @MAGV))
		Return 1
	Return 0
END
GO

CREATE PROCEDURE P5 @MAGV char(3)
AS
BEGIN
	IF (dbo.KT_QUYDINH(@MAGV) = 1)
		Print N'Giáo viên thực hiện đúng quy định!'
	ELSE
		Print N'Giáo viên thực hiện không đúng quy định!'
END
GO
--Kiểm tra
EXEC P5 '002'

/*P6. Thêm 1 phân công cho 1 giáo viên thực hiện 1 công việc của đề tài*/
CREATE PROCEDURE P6 @MAGV char(3), @MADT char(3), @SOTT int
AS
BEGIN
	IF (EXISTS(SELECT GV.MAGV FROM GIAOVIEN GV WHERE GV.MAGV = @MAGV) 
		AND EXISTS(SELECT CONGVIEC.MADT, CONGVIEC.SOTT FROM CONGVIEC WHERE CONGVIEC.MADT = @MADT AND CONGVIEC.SOTT = @SOTT) 
		AND (SELECT YEAR(NGAYKT) - YEAR(NGAYBD) FROM CONGVIEC  WHERE CONGVIEC.MADT = @MADT AND CONGVIEC.SOTT = @SOTT)>0 
		AND dbo.KT_QUYDINH(@MAGV) = 1)
	BEGIN
		INSERT INTO THAMGIADT VALUES (@MAGV, @MADT, @SOTT, 0, NULL)
		Print N'Phân công công việc thành công!'
		DECLARE @STT char(1)
		SET @STT = @SOTT
		Print 'MAGV: ' + @MAGV + N'; MADT: ' + @MADT + '; SOTT: ' + @STT
	END
	ELSE
		Print N'Phân công công việc không thành công!'
END
GO
--Kiểm tra
EXEC P6 '006', '006', '3'

/*P7. Xóa 1 giáo viên theo mã. Nếu giáo viên có thông tin liên quan thì báo lỗi*/
CREATE PROCEDURE P7 @MAGV char(3)
AS
BEGIN
	IF (NOT EXISTS(SELECT * FROM THAMGIADT WHERE MAGV = @MAGV) AND NOT EXISTS(SELECT * FROM NGUOITHAN WHERE MAGV = @MAGV) AND NOT EXISTS(SELECT * FROM GV_DT WHERE MAGV = @MAGV))
	BEGIN
		DELETE FROM GIAOVIEN
		WHERE MAGV = @MAGV
		Print N'Xóa thành công giáo viên có mã ' + @MAGV
	END
	ELSE
		Print N'Lỗi: Giáo viên có thông tin liên quan!'
END
GO
--Kiểm tra
EXEC P7 '001'
--Kiểm tra lại thông tin bảng GIAOVIEN
SELECT * FROM GIAOVIEN

/*P8. In ra danh sách giáo viên của 1 phòng ban với số lượng đề tài tham gia, số thân nhân, số giáo viên mà giáo viên đó quản lý (nếu có)*/
CREATE PROCEDURE P8 @MAKHOA varchar(4)
AS
BEGIN
	SELECT *, (SELECT COUNT(DISTINCT THAMGIADT.MADT)
				FROM GIAOVIEN GV2 JOIN THAMGIADT ON GV2.MAGV = THAMGIADT.MAGV
				WHERE GV2.MAGV = GV1.MAGV) AS SOLUONGDETAI,
				(SELECT COUNT(*)
				FROM GIAOVIEN GV2 JOIN NGUOITHAN ON GV2.MAGV = NGUOITHAN.MAGV
				WHERE GV2.MAGV = GV1.MAGV) AS SOTHANNHAN,
				(SELECT COUNT(*)
				FROM GIAOVIEN GV2
				WHERE GV2.GVQLCM = GV1.MAGV) AS SOGIAOVIENQUANLY
	FROM GIAOVIEN GV1 JOIN BOMON ON GV1.MABM = BOMON.MABM
	WHERE BOMON.MAKHOA = @MAKHOA
END
GO
--Kiểm tra
EXEC P8 'CNTT'
/*P9. Kiểm tra quy định của 2 giáo viên a, b: Nếu a là trưởng bộ môn của b thì lương của a phải cao hơn lương của b*/
CREATE PROCEDURE P9 @a char(3), @b char(3)
AS
BEGIN
	IF ((SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @a)=(SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @b) 
		AND (SELECT BOMON.TRUONGBM FROM GIAOVIEN JOIN BOMON ON GIAOVIEN.MABM = BOMON.MABM WHERE GIAOVIEN.MAGV = @b) = @a 
		AND (SELECT LUONG FROM GIAOVIEN WHERE MAGV = @a) > (SELECT LUONG FROM GIAOVIEN WHERE MAGV = @b))
		Print N'Giáo viên a và b đúng quy định!'
	ELSE
	BEGIN
		IF ((SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @a)!=(SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @b))
			Print N'Giáo viên a và b đúng quy định!'
		IF ((SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @a)=(SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @b)
			AND (SELECT BOMON.TRUONGBM FROM GIAOVIEN JOIN BOMON ON GIAOVIEN.MABM = BOMON.MABM WHERE GIAOVIEN.MAGV = @b) != @a )
			Print N'Giáo viên a và b đúng quy định!'
		IF ((SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @a)=(SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE GIAOVIEN.MAGV = @b) 
		AND (SELECT BOMON.TRUONGBM FROM GIAOVIEN JOIN BOMON ON GIAOVIEN.MABM = BOMON.MABM WHERE GIAOVIEN.MAGV = @b) = @a 
		AND (SELECT LUONG FROM GIAOVIEN WHERE MAGV = @a) <= (SELECT LUONG FROM GIAOVIEN WHERE MAGV = @b))
			Print N'Giáo viên a và b không đúng quy định!'
	END
END
GO
--Kiểm tra
EXEC P9 '002', '003'
EXEC P9 '001', '009'

/*P10. Khi thêm 1 giáo viên kiểm tra quy định: không trùng tên, tuổi>18, lương>0*/
CREATE PROCEDURE P10 @MAGV char(3), @HOTEN nvarchar(20), @LUONG float, @PHAI nvarchar(3), @NGSINH date, @DIACHI nvarchar(40), @GVQLCM char(3), @MABM nvarchar(4)
AS
BEGIN
	IF (@MAGV NOT IN(SELECT MAGV FROM GIAOVIEN) AND @HOTEN NOT IN(SELECT HOTEN FROM GIAOVIEN) AND @LUONG > 0 AND YEAR(GETDATE()) - YEAR (@NGSINH) > 18)
	BEGIN
		INSERT INTO GIAOVIEN VALUES (@MAGV, @HOTEN, @LUONG, @PHAI, @NGSINH, @DIACHI, @GVQLCM, @MABM)
		Print N'Thêm thành công giáo viên ' + @MAGV
	END
	ELSE
		Print N'Thêm thất bại! Giáo viên không thỏa quy định!'
END
GO
--Kiểm tra
EXEC P10 '011',N'Võ Văn Minh',1000.0,'Nam','2003-02-08',N'222 Hùng Vương, Q.5, TP HCM',NULL,'SH'


/*Tuần 09*/
/*T1. Tên đề tài phải duy nhất*/
CREATE TRIGGER trgTenDT
ON DETAI
FOR insert, update
AS
IF update(TENDT)
BEGIN
	IF EXISTS(SELECT * FROM inserted i WHERE i.TENDT IN (SELECT DT.TENDT FROM DETAI DT WHERE DT.MADT != i.MADT))
	BEGIN
		RAISERROR(N'Lỗi: Tên đề tài phải duy nhất', 16, 1)
		ROLLBACK
	END
END

/*T2. Trưởng bộ môn phải sinh trước 1975*/
CREATE TRIGGER trgTruongBM_BOMON
ON BOMON
FOR insert, update
AS
IF UPDATE(TRUONGBM)
BEGIN
	IF EXISTS (SELECT * FROM INSERTED I WHERE I.TRUONGBM IS NOT NULL AND TRUONGBM IN(SELECT MAGV FROM GIAOVIEN, BOMON WHERE BOMON.TRUONGBM = GIAOVIEN.MAGV AND YEAR(NGSINH)>=1975))
	BEGIN
		RAISERROR(N'Lỗi: Trưởng bộ môn phải sinh trước 1975', 16, 1)
		ROLLBACK
	END
END

CREATE TRIGGER trgTruongBM_GIAOVIEN
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(NGSINH)
BEGIN
	IF EXISTS (SELECT * FROM INSERTED I, BOMON WHERE BOMON.TRUONGBM = I.MAGV AND YEAR(I.NGSINH)>=1975)
	BEGIN
		RAISERROR(N'Lỗi: Trưởng bộ môn phải sinh trước 1975', 16, 1)
		ROLLBACK
	END
END

/*T3. Một bộ môn có tối thiểu 1 giáo viên nữ*/
CREATE TRIGGER trgBoMon_GiaoVien
ON BOMON
FOR INSERT, UPDATE
AS
IF UPDATE(MABM)
BEGIN
	IF NOT EXISTS (SELECT * FROM INSERTED I, GIAOVIEN WHERE I.MABM = GIAOVIEN.MABM AND GIAOVIEN.PHAI = N'Nữ')
	BEGIN
		RAISERROR(N'Lỗi: Mỗi bộ môn có tối thiểu 1 giáo viên nữ', 16, 1)
		ROLLBACK
	END
END


/*T4. Một giáo viên phải có ít nhất 1 số điện thoại*/
CREATE TRIGGER trgDienThoai_GIAOVIEN_ToiThieu
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(MAGV)
BEGIN
	IF NOT EXISTS(SELECT * FROM INSERTED I, GV_DT WHERE GV_DT.MAGV = I.MAGV)
	BEGIN
		RAISERROR(N'Lỗi: Mỗi giáo viên phải có ít nhất 1 số điện thoại', 16, 1)
		ROLLBACK
	END
END

/*T5. Một giáo viên có tối đa 3 số điện thoại*/
CREATE TRIGGER trgDienThoai_GIAOVIEN_ToiDa
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(MAGV)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE I.MAGV IN (SELECT COUNT(GV_DT.MAGV) FROM GV_DT WHERE GV_DT.MAGV = I.MAGV GROUP BY GV_DT.MAGV HAVING COUNT(GV_DT.MAGV)>3))
	BEGIN
		RAISERROR(N'Lỗi: Mỗi giáo viên có tối đa 3 số điện thoại', 16, 1)
		ROLLBACK
	END
END


CREATE TRIGGER trgGiaoVien_DIENTHOAI_ToiDa
ON GV_DT
FOR INSERT, UPDATE
AS
IF UPDATE(DIENTHOAI)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE (SELECT COUNT(GV_DT.DIENTHOAI) FROM GV_DT WHERE GV_DT.MAGV = I.MAGV AND GV_DT.DIENTHOAI != I.DIENTHOAI) >=3)
	BEGIN
		RAISERROR(N'Lỗi: Mỗi giáo viên có tối đa 3 số điện thoại', 16, 1)
		ROLLBACK
	END
END

/*T6. Một bộ môn phải có tối thiểu 4 giáo viên*/
CREATE TRIGGER trgGiaoVien_BOMON_ToiThieu
ON BOMON
FOR INSERT, UPDATE
AS
IF UPDATE(MABM)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE I.MABM NOT IN (SELECT GIAOVIEN.MABM FROM GIAOVIEN WHERE I.MABM = GIAOVIEN.MABM GROUP BY GIAOVIEN.MABM HAVING COUNT(GIAOVIEN.MAGV) >= 4))
	BEGIN
		RAISERROR(N'Lỗi: Mỗi bộ môn phải có tối thiểu 4 giáo viên', 16, 1)
		ROLLBACK
	END
END

/*T7. Trưởng bộ môn phải là người lớn tuổi nhất trong bộ môn*/
CREATE TRIGGER trgTruongBM_BOMON_Tuoi
ON BOMON
FOR insert, update
AS
IF UPDATE(TRUONGBM)
BEGIN
	IF EXISTS (SELECT * FROM INSERTED I WHERE I.TRUONGBM IS NOT NULL AND TRUONGBM IN(SELECT MAGV FROM GIAOVIEN WHERE I.TRUONGBM = GIAOVIEN.MAGV AND YEAR(GETDATE()) - YEAR(GIAOVIEN.NGSINH) = (SELECT MAX(YEAR(GETDATE()) - YEAR(GV.NGSINH)) FROM GIAOVIEN GV WHERE GV.MABM = I.MABM)))
	BEGIN
		RAISERROR(N'Lỗi: Trưởng bộ môn phải là người lớn tuổi nhất trong bộ môn', 16, 1)
		ROLLBACK
	END
END

CREATE TRIGGER trgTruongBM_GIAOVIEN_Tuoi
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(NGSINH)
BEGIN
	IF EXISTS (SELECT * FROM INSERTED I, BOMON WHERE BOMON.TRUONGBM = I.MAGV AND YEAR(GETDATE()) - YEAR(I.NGSINH) = (SELECT MAX(YEAR(GETDATE()) - YEAR(GV.NGSINH)) FROM GIAOVIEN GV WHERE GV.MABM = I.MABM))
	BEGIN
		RAISERROR(N'Lỗi: Trưởng bộ môn phải là người lớn tuổi nhất trong bộ môn', 16, 1)
		ROLLBACK
	END
END

/*T8. Nếu một giáo viên là trưởng bộ môn thì không làm người quản lý chuyên môn*/
CREATE TRIGGER trgTruongBM_GVQLCM_GIAOVIEN
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(GVQLCM)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE I.GVQLCM IS NOT NULL AND I.GVQLCM IN (SELECT TRUONGBM FROM BOMON))
	BEGIN
		RAISERROR(N'Lỗi: Giáo viên là trưởng bộ môn thì không làm người quản lý chuyên môn',16,1)
		ROLLBACK
	END
END

CREATE TRIGGER trgTruongBM_GVQLCM_BOMON
ON BOMON
FOR INSERT, UPDATE
AS
IF UPDATE(TRUONGBM)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE I.TRUONGBM IS NOT NULL AND I.TRUONGBM IN (SELECT GVQLCM FROM GIAOVIEN))
	BEGIN
		RAISERROR(N'Lỗi: Giáo viên là trưởng bộ môn thì không làm người quản lý chuyên môn',16,1)
		ROLLBACK
	END
END

/*T9. Giáo viên và người quản lý chuyên môn của giáo viên đó phải thuộc về một bộ môn*/
CREATE TRIGGER trgGiaoVien_GVQLCM
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(GVQLCM)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE I.GVQLCM IS NOT NULL AND I.MABM != (SELECT GV.MABM FROM GIAOVIEN GV WHERE I.GVQLCM = GV.MAGV))
	BEGIN
		RAISERROR(N'Lỗi: Giáo viên và người quản lý chuyên môn của giáo viên đó phải thuộc cùng một bộ môn',16,1)
		ROLLBACK
	END
END

/*T13. Một giáo viên chỉ làm chủ nhiệm tối đa 3 đề tài*/
CREATE TRIGGER trgGiaoVien_GVCNDT_GIAOVIEN
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(MAGV)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE (SELECT COUNT(MADT) FROM DETAI WHERE GVCNDT = I.MAGV) >3)
	BEGIN
		RAISERROR(N'Lỗi: Một giáo viên chỉ làm chủ nhiệm tối đa 3 đề tài',16,1)
		ROLLBACK
	END
END

CREATE TRIGGER trgGiaoVien_GVCNDT_DETAI
ON DETAI
FOR INSERT, UPDATE
AS
IF UPDATE(GVCNDT)
BEGIN
	IF EXISTS(SELECT * FROM INSERTED I WHERE (SELECT COUNT(DT.MADT) FROM DETAI DT WHERE I.GVCNDT = DT.GVCNDT AND I.MADT != DT.MADT)>=3)
	BEGIN
		RAISERROR(N'Lỗi: Một giáo viên chỉ làm chủ nhiệm tối đa 3 đề tài',16,1)
		ROLLBACK
	END
END

/*T14. Một đề tài phải có ít nhất 1 công việc*/
CREATE TRIGGER trgCongViec_DETAI
ON DETAI
FOR INSERT, UPDATE
AS
IF UPDATE(MADT)
BEGIN
	IF NOT EXISTS(SELECT * FROM INSERTED I, CONGVIEC WHERE I.MADT = CONGVIEC.MADT)
	BEGIN
		RAISERROR(N'Lỗi: Một đề tài phải có ít nhất 1 công việc',16,1)
		ROLLBACK
	END
END

/*T15. Lương của giáo viên phải nhỏ hơn lương người quản lý giáo viên đó*/
CREATE TRIGGER trgLuong_GIAOVIEN_GVQLCM
ON GIAOVIEN
FOR INSERT, UPDATE
AS
IF UPDATE(GVQLCM)
BEGIN
	IF EXISTS (SELECT * FROM INSERTED I WHERE I.GVQLCM IS NOT NULL AND I.LUONG >= (SELECT GV.LUONG FROM GIAOVIEN GV WHERE GV.MAGV = I.GVQLCM))
	BEGIN
		RAISERROR(N'Lỗi: Lương của giáo viên phải nhỏ hơn lương người quản lý giáo viên đó',16,1)
		ROLLBACK
	END
END
